---
layout: page
---

<nav aria-label="breadcrumb" class="breadcrumb">
  &gt;
  <a href="/">Home</a>
</nav>

<div class="content">
  <h2>Libraries</h2>
  <p>Each UltiBlox library handles a specific function—whether that’s reading sensors, displaying information, logging data, or managing thresholds. These libraries are designed to work independently or together, making it easy to build exactly what you need.</p>

  <div class="max-w-4xl mx-auto text-center">
    <img src="/assets/img/libraries.webp" alt="Libraries" class="w-full h-auto object-cover rounded-lg shadow-md">
  </div>

  <h2>Accessing the Libraries</h2>

  <h3>Arduino IDE</h3>
  
  <p>All libraries are available through the Arduino IDE library manager.</p>
  <p><strong>Note: The libraries in Arduino IDE are not updating and are currently out of date. This is because the library names were changed to remove spaces and improve naming consistency. Waiting for the Arduino team team to <a href="https://github.com/arduino/library-registry/issues" target="_blank">approve the rename</a>. For now a direct clone is a better option.</strong></p>
  <ul>
    <li>Click Sketch -> Include Library -> Manage Libraries...</li>
    <li>Search "UltiBlox"</li>
    <li>Click "Install" on the library you want to use</li>
  </ul>
  <p>Tip: If you're just getting started, install the UltiBlox-Examples library.</p>

  <h3>Clone from GitHub</h3>

  <p>Libraries can be cloned directly from GitHub</p>
  <ul>
    <li>Click on a library below.</li>
    <li>Follow the instructions in the readme to clone and install the library</p>
  </ul>

  <h3>Library Categories</h3>

  <h4>Examples</h4>
  <ul>
    <li><a href="/libraries/Examples">Examples</a>: Provides examples for the various UltiBlox templates.</li>
  </ul>

  <h4>Sensors</h4>
  <ul>
    <li><a href="/libraries/SensorAnalog">SensorAnalog</a>: Reads and calibrates analog sensors with support for calibration ranges and threshold-based triggers.</li>
  </ul>

  <h4>Displays</h4>
  <p>DisplayValue[Type] libraries share the same signatures and are interchangeable, allowing one to be swapped for another with minimal change to the code.
  <ul>
    <li><a href="/libraries/DisplayValueLCD">DisplayValueLCD</a>: Controls 16x2 I2C LCD displays for simple text output.</li>
    <li><a href="/libraries/DisplayValueOLED">DisplayValueOLED</a>: Manages OLED displays with options for custom fonts and layout.</li>
    <li><a href="/libraries/DisplayValueNull">DisplayValueNull</a>: Empty implementation of DisplayValue[Type] libraries for disabling displays without breaking code.</li>
  </ul>

  <h4>Control & Thresholds</h4>
  <ul>
    <li><a href="/libraries/ActiveThreshold">ActiveThreshold</a>: Turns on/off devices based on sensor data crossing a defined threshold.</li>
  </ul>

  <h4>Logging</h4>
  <ul>
    <li><a href="/libraries/SerialLogger">SerialLogger</a>: Logs data over Serial with adjustable log levels and formats.</li>
  </ul>

  <h3>Using UltiBlox Libraries</h3>
  <p>Combine libraries as needed to build your project:</p>
  <ul>
    <li>Use <strong>SerialLogger</strong> with <strong>SensorAnalog</strong> to log sensor readings in real time.</li>
    <li>Display values on LCD or OLED screens by pairing <strong>SensorAnalog</strong> with <strong>DisplayValueLCD</strong> or <strong>DisplayValueOLED</strong>.</li>
    <li>Set up automated actions with <strong>ActiveThreshold</strong> to control devices when sensor readings reach specific levels.</li>
  </ul>

  <p>This approach keeps each library simple and focused, making it easier to integrate only the functions your project requires.</p>
</div>